https://medium.com/@nirgn/load-balancing-applications-with-haproxy-and-docker-d719b7c5b231


FROM node
RUN mkdir -p /usr/src/app
COPY index.js /usr/src/app
EXPOSE 8080
CMD [ "node", "/usr/src/app/index" ]

Sree1>cd nginx-loadbalancer/
Sree1>docker build -t awesome .


Sree1>docker run -d -P awesome
e011ae2c48b6a278b449f40292d03e957e0a07c0a992bd0228d6269305737bc7
Sree1>docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                     NAMES
e011ae2c48b6        awesome             "node /usr/src/app/i…"   9 seconds ago       Up 5 seconds        0.0.0.0:32780->8080/tcp   loving_payne
Sree1>curl localhost:32780
<h1>I'm e011ae2c48b6</h1>


version: '3'

services:
  awesome:
   image: awesome
   ports:
     - 8080
   environment:
     - SERVICE_PORTS=8080
   deploy:
     replicas: 20
     update_config:
       parallelism: 5
       delay: 10s
     restart_policy:
       condition: on-failure
       max_attempts: 3
       window: 120s
   networks:
     - web

  proxy:
    image: dockercloud/haproxy
    depends_on:
      - awesome
    environment:
      - BALANCE=leastconn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
    networks:
      - web
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  web:
    driver: overlay

DockerCloud HAProxy

For our HTTP Server we use HAProxy, but not the regular version of HAProxy, we use the version docker uses in their cloud. That’s why we set an environment variable named SERVICE_PORTS in our awesome service, because this is the ports that will be exposed to HAProxy (we can put multiple ports there by separating them with comma). We also set an environment variable named BALANCE to set the load balancing algorithm to be leastconn and not roundrobin (which is what set in default).


