Run a Stateless Application Using a Deployment
https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/

Objectives
Create an nginx deployment.
Use kubectl to list information about the deployment.
Update the deployment.

You need to have a Kubernetes cluster, 
and the kubectl command-line tool must be configured to communicate with your cluster.

SreeMacMin16GB:k3-stateless sree$ kubectl apply -f https://k8s.io/examples/application/deployment.yaml
deployment.apps/nginx-deployment created
SreeMacMin16GB:k3-stateless sree$ kubectl apply -f deployment.yaml 
deployment.apps/nginx-deployment unchanged
SreeMacMin16GB:k3-stateless sree$ cat deployment.yaml 
# https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/application/deployment.yaml
# https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/
# Run a Stateless Application Using a Deployment
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80

SreeMacMin16GB:k3-stateless sree$ kubectl describe deployment nginx-deployment
Name:                   nginx-deployment
Namespace:              default
CreationTimestamp:      Wed, 04 Jul 2018 11:16:25 +0530
Labels:                 <none>
Annotations:            deployment.kubernetes.io/revision=1
                        kubectl.kubernetes.io/last-applied-configuration={"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"nginx-deployment","namespace":"default"},"spec":{"replicas":2,"selecto...
Selector:               app=nginx
Replicas:               2 desired | 2 updated | 2 total | 2 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  app=nginx
  Containers:
   nginx:
    Image:        nginx:1.7.9
    Port:         80/TCP
    Host Port:    0/TCP
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   nginx-deployment-75675f5897 (2/2 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  1m    deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 2


SreeMacMin16GB:k3-stateless sree$ kubectl get pods
NAME                                READY     STATUS      RESTARTS   AGE
nginx-deployment-75675f5897-5qksr   1/1       Running     0          3m
nginx-deployment-75675f5897-hrx88   1/1       Running     0          3m
nginx-sree-5585ddc57d-nddzg         1/1       Running     0          1h
pi-9hvdw                            0/1       Completed   0          1h
SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
NAME                                READY     STATUS    RESTARTS   AGE
nginx-deployment-75675f5897-5qksr   1/1       Running   0          3m
nginx-deployment-75675f5897-hrx88   1/1       Running   0          3m

SreeMacMin16GB:k3-stateless sree$ kubectl describe pod nginx-deployment-75675f5897-5qksr
Name:           nginx-deployment-75675f5897-5qksr
Namespace:      default
Node:           minikube/10.0.2.15
Start Time:     Wed, 04 Jul 2018 11:16:25 +0530
Labels:         app=nginx
                pod-template-hash=3123191453
Annotations:    <none>
Status:         Running
IP:             172.17.0.8
Controlled By:  ReplicaSet/nginx-deployment-75675f5897
Containers:
  nginx:
    Container ID:   docker://e896eb46f8bb00a1d42184c253884e40db24d7ea60112b006e613e21609da709
    Image:          nginx:1.7.9
    Image ID:       docker-pullable://nginx@sha256:e3456c851a152494c3e4ff5fcc26f240206abac0c9d794affb40e0714846c451
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Wed, 04 Jul 2018 11:17:17 +0530
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-qmvqk (ro)
Conditions:
  Type           Status
  Initialized    True 
  Ready          True 
  PodScheduled   True 
Volumes:
  default-token-qmvqk:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-qmvqk
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason                 Age   From               Message
  ----    ------                 ----  ----               -------
  Normal  Scheduled              5m    default-scheduler  Successfully assigned nginx-deployment-75675f5897-5qksr to minikube
  Normal  SuccessfulMountVolume  5m    kubelet, minikube  MountVolume.SetUp succeeded for volume "default-token-qmvqk"
  Normal  Pulling                5m    kubelet, minikube  pulling image "nginx:1.7.9"
  Normal  Pulled                 4m    kubelet, minikube  Successfully pulled image "nginx:1.7.9"
  Normal  Created                4m    kubelet, minikube  Created container
  Normal  Started                4m    kubelet, minikube  Started container
SreeMacMin16GB:k3-stateless sree$ 



SreeMacMin16GB:k3-stateless sree$ kubectl apply -f https://k8s.io/examples/application/deployment-update.yaml
deployment.apps/nginx-deployment configured
SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
NAME                                READY     STATUS              RESTARTS   AGE
nginx-deployment-6ddf4c5bf7-5jdcm   0/1       ContainerCreating   0          5s
nginx-deployment-75675f5897-5qksr   1/1       Running             0          7m
nginx-deployment-75675f5897-hrx88   1/1       Running             0          7m
SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
NAME                                READY     STATUS              RESTARTS   AGE
nginx-deployment-6ddf4c5bf7-5jdcm   0/1       ContainerCreating   0          11s
nginx-deployment-75675f5897-5qksr   1/1       Running             0          8m
nginx-deployment-75675f5897-hrx88   1/1       Running             0          8m


SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
NAME                                READY     STATUS              RESTARTS   AGE
nginx-deployment-6ddf4c5bf7-5jdcm   0/1       ContainerCreating   0          42s
nginx-deployment-75675f5897-5qksr   1/1       Running             0          8m
nginx-deployment-75675f5897-hrx88   1/1       Running             0          8m
SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
NAME                                READY     STATUS              RESTARTS   AGE
nginx-deployment-6ddf4c5bf7-5jdcm   1/1       Running             0          1m
nginx-deployment-6ddf4c5bf7-879sr   0/1       ContainerCreating   0          1s
nginx-deployment-75675f5897-5qksr   0/1       Terminating         0          9m
nginx-deployment-75675f5897-hrx88   1/1       Running             0          9m
SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
NAME                                READY     STATUS    RESTARTS   AGE
nginx-deployment-6ddf4c5bf7-5jdcm   1/1       Running   0          1m
nginx-deployment-6ddf4c5bf7-879sr   1/1       Running   0          22s

SreeMacMin16GB:k3-stateless sree$ kubectl apply -f https://k8s.io/examples/application/deployment-scale.yaml
deployment.apps/nginx-deployment configured
SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
NAME                                READY     STATUS    RESTARTS   AGE
nginx-deployment-6ddf4c5bf7-5jdcm   1/1       Running   0          3m
nginx-deployment-6ddf4c5bf7-879sr   1/1       Running   0          2m
nginx-deployment-6ddf4c5bf7-cs6ts   1/1       Running   0          4s
nginx-deployment-6ddf4c5bf7-js69x   1/1       Running   0          4s

SreeMacMin16GB:k3-stateless sree$ kubectl delete deployment nginx-deployment
deployment.extensions "nginx-deployment" deleted
SreeMacMin16GB:k3-stateless sree$ kubectl get pods -l app=nginx
No resources found.

ReplicationControllers â€“ the Old Way
The preferred way to create a replicated application is to use a Deployment, 
which in turn uses a ReplicaSet. Before the Deployment and ReplicaSet were 
added to Kubernetes, replicated applications were configured by using a 
ReplicationController.
