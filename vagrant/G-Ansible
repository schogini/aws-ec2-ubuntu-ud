Vagrant.configure("2") do |config|
  config.vm.define "answorkstation" do |answorkstation|
      answorkstation.vm.box = "ubuntu/trusty64"
      answorkstation.vm.hostname = "ansibleworkstation"
      answorkstation.vm.network 'private_network', ip: '172.28.128.30'
      answorkstation.vm.network "forwarded_port", guest: 22, host: 2222, auto_correct: true

      answorkstation.vm.provision "shell", inline: <<-SHELL
        apt-add-repository -y ppa:ansible/ansible
        apt-get update
        apt-get install -y ansible curl nano tree wget
    
        export ANSIBLE_HOST_KEY_CHECKING=False

        echo 172.28.128.31 ansnode1 >> /etc/hosts
        echo 172.28.128.32 ansnode2 >> /etc/hosts
        
        sudo cp /vagrant/hosts /etc/ansible/hosts
      SHELL
      #answorkstation.vm.provision "file", source: "hosts", destination: "/etc/ansible/hosts"

  end

  (1..2).each do |i|
      config.vm.define "ansnode#{i}" do |ansnode|
        ansnode.vm.box = "ubuntu/trusty64"
        ansnode.vm.hostname = "ansnode#{i}"
        ansnode.vm.network 'private_network', ip: "172.28.128.3#{i}"
        ansnode.vm.network "forwarded_port", guest: 22, host: 2222, auto_correct: true

        ansnode.vm.provision "shell", inline: <<-SHELL
	        apt-get update
	        apt-get install -y wget tree curl nano openssh-server
          passwd -d root
          sed -ri 's/^#IgnoreUserKnownHosts\s+.*/IgnoreUserKnownHosts yes/' /etc/ssh/sshd_config
          sed -ri 's/^PermitEmptyPasswords\s+.*/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
          sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
          sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config

	        service ssh restart
        SHELL
      end
  end
  
end
